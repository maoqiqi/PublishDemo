apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${rootProject.ext.version["androidSupportSdkVersion"]}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// 项目的主页
def siteUrl = 'https://github.com/maoqiqi/PublishDemo'
// 项目的git地址
def gitUrl = 'https://github.com/maoqiqi/PublishDemo.git'

Properties properties = new Properties()
properties.load(rootProject.file('local.properties').newDataInputStream())

group = 'com.codearms.maoqiqi'
version = '1.0.1'

bintray {
    user = properties.getProperty('user')
    key = properties.getProperty('key')
    pkg {
        // 可选参数 用户名
        userOrg = 'maoqiqi'
        // 下面四个必选
        // 存储库名称
        repo = 'custom-publish'
        // 包名
        name = 'publish_2'
        // 您的包许可证
        licenses = ['Apache-2.0']
        // VCS URL
        vcsUrl = gitUrl
        // Website URL
        websiteUrl = siteUrl
        // 是否是公开项目
        publish = true
        version {
            // 必选 版本名称
            name = '1.0.1'
            // 以下四项可选
            // 版本描述
            desc = 'Just a simple android lib sample.'
            // 版本发布的日期
            released = new Date()
            // 版本控制标签名称
            vcsTag = 'v1.0.1'
            // 要附加到版本的属性
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'publish_2'
                description 'Just a simple android lib sample.'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'maoqiqi'
                        name 'Fengqi Mao'
                        email 'fengqi.mao.march@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

// 以下是生成java source jar和java doc jar任务

task sourcesJar(type: Jar) {
    // 通过from函数指定代码源,这里是默认代码源
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    // source指定了代码源
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // 忽略注释语法错误,如果用jdk1.8,你的注释写的不规范就编译不过
    failOnError false
}

// 这里dependsOn意为仅当javadoc完成后才开始本task
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}